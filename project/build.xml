<project>

  <path id="main.class.path">
    <fileset dir="build/jar" includes="classes.jar"/>
  </path>

  <path id="junit.class.path">
    <fileset dir="jars" includes="*.jar"/>
    <fileset dir="build" includes="*.class" />
    <path refid="main.class.path"/>
  </path>

  <target name="junit" depends="jar">
    <property name="junit.path" refid="junit.class.path"/>
    <mkdir dir="junitreport"/>

    <junit printsummary="yes" haltonerror="yes" haltonfailure="yes">
      <classpath refid="junit.class.path"/>

      <formatter type="xml"/>
      <jvmarg value="-Djava.security.policy=policy"/>

      <batchtest todir="junitreport">
        <fileset dir="tests/" includes="**/*Test.java"/>
      </batchtest>
    </junit>
  </target>

  <property name="timeout" value="4000" />


  <target name="clean" description="Clean build directory">
    <delete dir="build"/>
    <delete dir="out" />
    <delete dir="junitreport" />
  </target>

  <target name="compile" depends="clean" description="Compiles to build directory">
    <mkdir dir="build"/>
    <mkdir dir="build/src"/>
    <mkdir dir="build/src"/>
    <javac srcdir="src" destdir="build/src"/>
    <javac srcdir="tests" destdir="build/src" classpath="jars/junit-4.12.jar" />
  </target>

  <target name="jar" depends="compile" description="Jars to build directory">

    <jar jarfile="build/jar/classes.jar" basedir="build/src/" includes="api/** applications/** system/** util/**"/>

    <mkdir dir="build/src/jar"/>

    <jar destfile="build/src/jar/SpaceImpl.jar" basedir="build/src">
      <manifest>
        <attribute name="Main-Class" value="system.SpaceImpl"/>
      </manifest>
    </jar>

    <jar destfile="build/src/jar/ComputerImpl.jar" basedir="build/src">
      <manifest>
        <attribute name="Main-Class" value="system.ComputerImpl"/>
      </manifest>
    </jar>

    <jar destfile="build/src/jar/Fib.jar" basedir="build/src">
      <manifest>
        <attribute name="Main-Class" value="applications.fibonacci.TaskFibonacci"/>
      </manifest>
    </jar>

    <jar destfile="build/src/jar/TSP.jar" basedir="build/src">
      <manifest>
        <attribute name="Main-Class" value="applications.euclideantsp.TaskEuclideanTsp"/>
      </manifest>
    </jar>

    <jar destfile="build/src/jar/Path.jar" basedir="build/src">
      <manifest>
        <attribute name="Main-Class" value="applications.longestpath.TaskLongestPath"/>
      </manifest>
    </jar>

    <jar destfile="build/src/jar/Mandel.jar" basedir="build/src">
      <manifest>
        <attribute name="Main-Class" value="applications.mandelbrotset.TaskMandelbrotSet"/>
      </manifest>
    </jar>

  </target>

  <target name="all" depends="clean,compile,jar" description="Clean build dir, then compiles and create jars" />

  <target name="runSpace">
    <property name="server-ip" value="localhost"/>
    <java jar="build/src/jar/SpaceImpl.jar" fork="true">
      <jvmarg value="-Djava.security.policy=policy"/>
      <jvmarg value="-Dsun.rmi.transport.tcp.responseTimeout=${timeout}" />
    </java>
  </target>

  <target name="runComputer">
    <java jar="build/src/jar/ComputerImpl.jar" fork="true">
      <jvmarg value="-Djava.security.policy=policy"/>
      <jvmarg value="-Dsun.rmi.transport.tcp.responseTimeout=${timeout}" />
    </java>
  </target>

  <target name="runTSP">
    <property name="server-ip" value="localhost"/>
    <java jar="build/src/jar/TSP.jar" fork="true">
      <arg value="localhost" />
      <jvmarg value="-Djava.security.policy=policy"/>
      <jvmarg value="-Dsun.rmi.transport.tcp.responseTimeout=${timeout}" />
    </java>
  </target>

  <target name="runFib">
    <java jar="build/src/jar/Fib.jar" fork="true">
      <arg value="localhost" />
      <jvmarg value="-Djava.security.policy=policy"/>
      <jvmarg value="-Dsun.rmi.transport.tcp.responseTimeout=${timeout}" />
    </java>
  </target>

  <target name="runLong">
    <java jar="build/src/jar/Path.jar" fork="true">
      <arg value="localhost" />
      <jvmarg value="-Djava.security.policy=policy"/>
      <jvmarg value="-Dsun.rmi.transport.tcp.responseTimeout=${timeout}" />
    </java>
  </target>

  <target name="javadoc" description="create javadocs">
    <javadoc packagenames="tasks.*,api.*,clients.*,system.*,jobs.*,util.*,results.*" sourcepath="src" destdir="documents/javadoc" />
  </target>

</project>