<project>

  <!--
  <path id="main.class.path">
    <fileset dir="build/jar" includes="classes.jar"/>
  </path>

  <path id="junit.class.path">
    <fileset dir="jars" includes="*.jar"/>
    <fileset dir="build" includes="*.class" />
    <path refid="main.class.path"/>
  </path>

  <target name="junit" depends="jar">
    <property name="junit.path" refid="junit.class.path"/>
    <mkdir dir="junitreport"/>

    <junit printsummary="yes" haltonerror="yes" haltonfailure="yes">
      <classpath refid="junit.class.path"/>

      <formatter type="xml"/>
      <jvmarg value="-Djava.security.policy=policy"/>

      <batchtest todir="junitreport">
        <fileset dir="tests/" includes="**/*Test.java"/>
      </batchtest>
    </junit>
  </target>

  -->

  <property name="timeout" value="40000" />

  <target name="clean" description="Clean build directory">
    <delete dir="build"/>
    <delete dir="out" />
    <delete dir="junitreport" />
  </target>

  <target name="compile" depends="clean" description="Compiles to build directory">
    <mkdir dir="build"/>
    <mkdir dir="build/src"/>
    <javac srcdir="src" destdir="build/src"/>
    <javac srcdir="tests" destdir="build/src" classpath="jars/junit-4.12.jar" />
  </target>

  <target name="jar" depends="compile" description="Jars to build directory">
    <mkdir dir="build/jar"/>
    <jar jarfile="build/jar/classes.jar" basedir="build/src/" includes="api/** applications/** system/** util/**"/>
  </target>

  <target name="all" depends="clean,compile,jar" description="Clean build dir, then compiles and create jars" />

  <target name="runSpace" description="run computer" >
    <java classname="system.SpaceImpl" fork="true">
      <jvmarg value="-Djava.security.policy=policy"/>
      <jvmarg value="-Dsun.rmi.transport.tcp.responseTimeout=${timeout}" />
      <classpath>
        <pathelement location="build/jar/classes.jar"/>
      </classpath>
    </java>
  </target>

  <target name="runComputer" description="run computer" >
    <property name="server-ip" value="localhost"/>
    <java classname="system.ComputerImpl" fork="true">
      <arg value="${server-ip}" />
      <jvmarg value="-Djava.security.policy=policy"/>
      <jvmarg value="-Dsun.rmi.transport.tcp.responseTimeout=${timeout}" />
      <classpath>
        <pathelement location="build/jar/classes.jar"/>
      </classpath>
    </java>
  </target>

  <target name="runTSP" description="run client" >
    <property name="server-ip" value="localhost"/>
    <java classname="applications.euclideantsp.TaskEuclideanTsp" fork="true">
      <arg value="${server-ip}" />
      <jvmarg value="-Djava.security.policy=policy"/>
      <jvmarg value="-Dsun.rmi.transport.tcp.responseTimeout=${timeout}" />
      <classpath>
        <pathelement location="build/jar/classes.jar"/>
      </classpath>
    </java>
  </target>

  <target name="runFib" description="run fibonacci task" >
    <property name="server-ip" value="localhost"/>
    <java classname="applications.fibonacci.TaskFibonacci" fork="true">
      <arg value="${server-ip}" />
      <jvmarg value="-Djava.security.policy=policy"/>
      <jvmarg value="-Dsun.rmi.transport.tcp.responseTimeout=${timeout}" />
      <classpath>
        <pathelement location="build/jar/classes.jar"/>
      </classpath>
    </java>
  </target>

  <target name="runLPP" description="run longest path task" >
    <property name="server-ip" value="localhost"/>
    <property name="file" value="exampleGraph30Nodes.txt"/>
    <java classname="applications.longestpath.TaskLongestPath" fork="true">
      <arg value="${server-ip}" />
      <arg value="${file}"/>
      <jvmarg value="-Djava.security.policy=policy"/>
      <jvmarg value="-Dsun.rmi.transport.tcp.responseTimeout=${timeout}" />
      <classpath>
        <pathelement location="build/jar/classes.jar"/>
      </classpath>
    </java>
  </target>


  <target name="runMandel" description="run client" >
    <property name="server-ip" value="localhost"/>
    <java classname="applications.mandelbrotset.TaskMandelbrotSet" fork="true">
      <arg value="${server-ip}" />
      <jvmarg value="-Djava.security.policy=policy"/>
      <jvmarg value="-Dsun.rmi.transport.tcp.responseTimeout=${timeout}" />
      <classpath>
        <pathelement location="build/jar/classes.jar"/>
      </classpath>
    </java>
  </target>

  <target name="javadoc" description="create javadocs">
    <javadoc packagenames="tasks.*,api.*,clients.*,system.*,jobs.*,util.*,results.*" sourcepath="src" destdir="documents/javadoc" />
  </target>

</project>